name: Deploy
on:
  workflow_dispatch:
  push:
    branches: [master]
permissions:
  id-token: write
  contents: read
concurrency: production
jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::858777967843:role/github-actions-cdk
          aws-region: us-east-1

      - name: create api-lambda .env
        run: printf "FLICKR_API_KEY=${{ secrets.FLICKR_API_KEY }}\nGH_TOKEN=${{ secrets.GH_TOKEN }}\nSPOTIFY_CLIENT_ID=${{ secrets.SPOTIFY_CLIENT_ID }}\nSPOTIFY_CLIENT_SECRET=${{ secrets.SPOTIFY_CLIENT_SECRET }}\nLASTFM_API_KEY=${{ secrets.LASTFM_API_KEY }}\n" > api-lambda/.env

      - name: create oauth-lambda .env
        run: printf "SPOTIFY_CLIENT_ID=${{ secrets.SPOTIFY_CLIENT_ID }}\nSPOTIFY_CLIENT_SECRET=${{ secrets.SPOTIFY_CLIENT_SECRET }}\n" > oauth-lambda/.env

      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn run check
      - run: yarn deploy
